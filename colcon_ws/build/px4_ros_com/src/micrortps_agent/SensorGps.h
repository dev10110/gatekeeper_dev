// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file SensorGps.h
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifndef _PX4_MSGS_MSG_SENSORGPS_H_
#define _PX4_MSGS_MSG_SENSORGPS_H_

// TODO Poner en el contexto.

#include <stdint.h>
#include <array>
#include <string>
#include <vector>
#include <map>
#include <bitset>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif
#else
#define eProsima_user_DllExport
#endif

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(SensorGps_SOURCE)
#define SensorGps_DllAPI __declspec( dllexport )
#else
#define SensorGps_DllAPI __declspec( dllimport )
#endif // SensorGps_SOURCE
#else
#define SensorGps_DllAPI
#endif
#else
#define SensorGps_DllAPI
#endif // _WIN32

namespace eprosima
{
    namespace fastcdr
    {
        class Cdr;
    }
}


namespace px4_msgs
{
    namespace msg
    {
        /*!
         * @brief This class represents the structure SensorGps defined by the user in the IDL file.
         * @ingroup SENSORGPS
         */
        class SensorGps
        {
        public:

            /*!
             * @brief Default constructor.
             */
            eProsima_user_DllExport SensorGps();

            /*!
             * @brief Default destructor.
             */
            eProsima_user_DllExport ~SensorGps();

            /*!
             * @brief Copy constructor.
             * @param x Reference to the object px4_msgs::msg::SensorGps that will be copied.
             */
            eProsima_user_DllExport SensorGps(const SensorGps &x);

            /*!
             * @brief Move constructor.
             * @param x Reference to the object px4_msgs::msg::SensorGps that will be copied.
             */
            eProsima_user_DllExport SensorGps(SensorGps &&x);

            /*!
             * @brief Copy assignment.
             * @param x Reference to the object px4_msgs::msg::SensorGps that will be copied.
             */
            eProsima_user_DllExport SensorGps& operator=(const SensorGps &x);

            /*!
             * @brief Move assignment.
             * @param x Reference to the object px4_msgs::msg::SensorGps that will be copied.
             */
            eProsima_user_DllExport SensorGps& operator=(SensorGps &&x);

            /*!
             * @brief This function sets a value in member timestamp
             * @param _timestamp New value for member timestamp
             */
            eProsima_user_DllExport void timestamp(uint64_t _timestamp);

            /*!
             * @brief This function returns the value of member timestamp
             * @return Value of member timestamp
             */
            eProsima_user_DllExport uint64_t timestamp() const;

            /*!
             * @brief This function returns a reference to member timestamp
             * @return Reference to member timestamp
             */
            eProsima_user_DllExport uint64_t& timestamp();

            /*!
             * @brief This function sets a value in member device_id
             * @param _device_id New value for member device_id
             */
            eProsima_user_DllExport void device_id(uint32_t _device_id);

            /*!
             * @brief This function returns the value of member device_id
             * @return Value of member device_id
             */
            eProsima_user_DllExport uint32_t device_id() const;

            /*!
             * @brief This function returns a reference to member device_id
             * @return Reference to member device_id
             */
            eProsima_user_DllExport uint32_t& device_id();

            /*!
             * @brief This function sets a value in member lat
             * @param _lat New value for member lat
             */
            eProsima_user_DllExport void lat(int32_t _lat);

            /*!
             * @brief This function returns the value of member lat
             * @return Value of member lat
             */
            eProsima_user_DllExport int32_t lat() const;

            /*!
             * @brief This function returns a reference to member lat
             * @return Reference to member lat
             */
            eProsima_user_DllExport int32_t& lat();

            /*!
             * @brief This function sets a value in member lon
             * @param _lon New value for member lon
             */
            eProsima_user_DllExport void lon(int32_t _lon);

            /*!
             * @brief This function returns the value of member lon
             * @return Value of member lon
             */
            eProsima_user_DllExport int32_t lon() const;

            /*!
             * @brief This function returns a reference to member lon
             * @return Reference to member lon
             */
            eProsima_user_DllExport int32_t& lon();

            /*!
             * @brief This function sets a value in member alt
             * @param _alt New value for member alt
             */
            eProsima_user_DllExport void alt(int32_t _alt);

            /*!
             * @brief This function returns the value of member alt
             * @return Value of member alt
             */
            eProsima_user_DllExport int32_t alt() const;

            /*!
             * @brief This function returns a reference to member alt
             * @return Reference to member alt
             */
            eProsima_user_DllExport int32_t& alt();

            /*!
             * @brief This function sets a value in member alt_ellipsoid
             * @param _alt_ellipsoid New value for member alt_ellipsoid
             */
            eProsima_user_DllExport void alt_ellipsoid(int32_t _alt_ellipsoid);

            /*!
             * @brief This function returns the value of member alt_ellipsoid
             * @return Value of member alt_ellipsoid
             */
            eProsima_user_DllExport int32_t alt_ellipsoid() const;

            /*!
             * @brief This function returns a reference to member alt_ellipsoid
             * @return Reference to member alt_ellipsoid
             */
            eProsima_user_DllExport int32_t& alt_ellipsoid();

            /*!
             * @brief This function sets a value in member s_variance_m_s
             * @param _s_variance_m_s New value for member s_variance_m_s
             */
            eProsima_user_DllExport void s_variance_m_s(float _s_variance_m_s);

            /*!
             * @brief This function returns the value of member s_variance_m_s
             * @return Value of member s_variance_m_s
             */
            eProsima_user_DllExport float s_variance_m_s() const;

            /*!
             * @brief This function returns a reference to member s_variance_m_s
             * @return Reference to member s_variance_m_s
             */
            eProsima_user_DllExport float& s_variance_m_s();

            /*!
             * @brief This function sets a value in member c_variance_rad
             * @param _c_variance_rad New value for member c_variance_rad
             */
            eProsima_user_DllExport void c_variance_rad(float _c_variance_rad);

            /*!
             * @brief This function returns the value of member c_variance_rad
             * @return Value of member c_variance_rad
             */
            eProsima_user_DllExport float c_variance_rad() const;

            /*!
             * @brief This function returns a reference to member c_variance_rad
             * @return Reference to member c_variance_rad
             */
            eProsima_user_DllExport float& c_variance_rad();

            /*!
             * @brief This function sets a value in member fix_type
             * @param _fix_type New value for member fix_type
             */
            eProsima_user_DllExport void fix_type(uint8_t _fix_type);

            /*!
             * @brief This function returns the value of member fix_type
             * @return Value of member fix_type
             */
            eProsima_user_DllExport uint8_t fix_type() const;

            /*!
             * @brief This function returns a reference to member fix_type
             * @return Reference to member fix_type
             */
            eProsima_user_DllExport uint8_t& fix_type();

            /*!
             * @brief This function sets a value in member eph
             * @param _eph New value for member eph
             */
            eProsima_user_DllExport void eph(float _eph);

            /*!
             * @brief This function returns the value of member eph
             * @return Value of member eph
             */
            eProsima_user_DllExport float eph() const;

            /*!
             * @brief This function returns a reference to member eph
             * @return Reference to member eph
             */
            eProsima_user_DllExport float& eph();

            /*!
             * @brief This function sets a value in member epv
             * @param _epv New value for member epv
             */
            eProsima_user_DllExport void epv(float _epv);

            /*!
             * @brief This function returns the value of member epv
             * @return Value of member epv
             */
            eProsima_user_DllExport float epv() const;

            /*!
             * @brief This function returns a reference to member epv
             * @return Reference to member epv
             */
            eProsima_user_DllExport float& epv();

            /*!
             * @brief This function sets a value in member hdop
             * @param _hdop New value for member hdop
             */
            eProsima_user_DllExport void hdop(float _hdop);

            /*!
             * @brief This function returns the value of member hdop
             * @return Value of member hdop
             */
            eProsima_user_DllExport float hdop() const;

            /*!
             * @brief This function returns a reference to member hdop
             * @return Reference to member hdop
             */
            eProsima_user_DllExport float& hdop();

            /*!
             * @brief This function sets a value in member vdop
             * @param _vdop New value for member vdop
             */
            eProsima_user_DllExport void vdop(float _vdop);

            /*!
             * @brief This function returns the value of member vdop
             * @return Value of member vdop
             */
            eProsima_user_DllExport float vdop() const;

            /*!
             * @brief This function returns a reference to member vdop
             * @return Reference to member vdop
             */
            eProsima_user_DllExport float& vdop();

            /*!
             * @brief This function sets a value in member noise_per_ms
             * @param _noise_per_ms New value for member noise_per_ms
             */
            eProsima_user_DllExport void noise_per_ms(int32_t _noise_per_ms);

            /*!
             * @brief This function returns the value of member noise_per_ms
             * @return Value of member noise_per_ms
             */
            eProsima_user_DllExport int32_t noise_per_ms() const;

            /*!
             * @brief This function returns a reference to member noise_per_ms
             * @return Reference to member noise_per_ms
             */
            eProsima_user_DllExport int32_t& noise_per_ms();

            /*!
             * @brief This function sets a value in member automatic_gain_control
             * @param _automatic_gain_control New value for member automatic_gain_control
             */
            eProsima_user_DllExport void automatic_gain_control(uint16_t _automatic_gain_control);

            /*!
             * @brief This function returns the value of member automatic_gain_control
             * @return Value of member automatic_gain_control
             */
            eProsima_user_DllExport uint16_t automatic_gain_control() const;

            /*!
             * @brief This function returns a reference to member automatic_gain_control
             * @return Reference to member automatic_gain_control
             */
            eProsima_user_DllExport uint16_t& automatic_gain_control();

            /*!
             * @brief This function sets a value in member jamming_indicator
             * @param _jamming_indicator New value for member jamming_indicator
             */
            eProsima_user_DllExport void jamming_indicator(int32_t _jamming_indicator);

            /*!
             * @brief This function returns the value of member jamming_indicator
             * @return Value of member jamming_indicator
             */
            eProsima_user_DllExport int32_t jamming_indicator() const;

            /*!
             * @brief This function returns a reference to member jamming_indicator
             * @return Reference to member jamming_indicator
             */
            eProsima_user_DllExport int32_t& jamming_indicator();

            /*!
             * @brief This function sets a value in member jamming_state
             * @param _jamming_state New value for member jamming_state
             */
            eProsima_user_DllExport void jamming_state(uint8_t _jamming_state);

            /*!
             * @brief This function returns the value of member jamming_state
             * @return Value of member jamming_state
             */
            eProsima_user_DllExport uint8_t jamming_state() const;

            /*!
             * @brief This function returns a reference to member jamming_state
             * @return Reference to member jamming_state
             */
            eProsima_user_DllExport uint8_t& jamming_state();

            /*!
             * @brief This function sets a value in member vel_m_s
             * @param _vel_m_s New value for member vel_m_s
             */
            eProsima_user_DllExport void vel_m_s(float _vel_m_s);

            /*!
             * @brief This function returns the value of member vel_m_s
             * @return Value of member vel_m_s
             */
            eProsima_user_DllExport float vel_m_s() const;

            /*!
             * @brief This function returns a reference to member vel_m_s
             * @return Reference to member vel_m_s
             */
            eProsima_user_DllExport float& vel_m_s();

            /*!
             * @brief This function sets a value in member vel_n_m_s
             * @param _vel_n_m_s New value for member vel_n_m_s
             */
            eProsima_user_DllExport void vel_n_m_s(float _vel_n_m_s);

            /*!
             * @brief This function returns the value of member vel_n_m_s
             * @return Value of member vel_n_m_s
             */
            eProsima_user_DllExport float vel_n_m_s() const;

            /*!
             * @brief This function returns a reference to member vel_n_m_s
             * @return Reference to member vel_n_m_s
             */
            eProsima_user_DllExport float& vel_n_m_s();

            /*!
             * @brief This function sets a value in member vel_e_m_s
             * @param _vel_e_m_s New value for member vel_e_m_s
             */
            eProsima_user_DllExport void vel_e_m_s(float _vel_e_m_s);

            /*!
             * @brief This function returns the value of member vel_e_m_s
             * @return Value of member vel_e_m_s
             */
            eProsima_user_DllExport float vel_e_m_s() const;

            /*!
             * @brief This function returns a reference to member vel_e_m_s
             * @return Reference to member vel_e_m_s
             */
            eProsima_user_DllExport float& vel_e_m_s();

            /*!
             * @brief This function sets a value in member vel_d_m_s
             * @param _vel_d_m_s New value for member vel_d_m_s
             */
            eProsima_user_DllExport void vel_d_m_s(float _vel_d_m_s);

            /*!
             * @brief This function returns the value of member vel_d_m_s
             * @return Value of member vel_d_m_s
             */
            eProsima_user_DllExport float vel_d_m_s() const;

            /*!
             * @brief This function returns a reference to member vel_d_m_s
             * @return Reference to member vel_d_m_s
             */
            eProsima_user_DllExport float& vel_d_m_s();

            /*!
             * @brief This function sets a value in member cog_rad
             * @param _cog_rad New value for member cog_rad
             */
            eProsima_user_DllExport void cog_rad(float _cog_rad);

            /*!
             * @brief This function returns the value of member cog_rad
             * @return Value of member cog_rad
             */
            eProsima_user_DllExport float cog_rad() const;

            /*!
             * @brief This function returns a reference to member cog_rad
             * @return Reference to member cog_rad
             */
            eProsima_user_DllExport float& cog_rad();

            /*!
             * @brief This function sets a value in member vel_ned_valid
             * @param _vel_ned_valid New value for member vel_ned_valid
             */
            eProsima_user_DllExport void vel_ned_valid(bool _vel_ned_valid);

            /*!
             * @brief This function returns the value of member vel_ned_valid
             * @return Value of member vel_ned_valid
             */
            eProsima_user_DllExport bool vel_ned_valid() const;

            /*!
             * @brief This function returns a reference to member vel_ned_valid
             * @return Reference to member vel_ned_valid
             */
            eProsima_user_DllExport bool& vel_ned_valid();

            /*!
             * @brief This function sets a value in member timestamp_time_relative
             * @param _timestamp_time_relative New value for member timestamp_time_relative
             */
            eProsima_user_DllExport void timestamp_time_relative(int32_t _timestamp_time_relative);

            /*!
             * @brief This function returns the value of member timestamp_time_relative
             * @return Value of member timestamp_time_relative
             */
            eProsima_user_DllExport int32_t timestamp_time_relative() const;

            /*!
             * @brief This function returns a reference to member timestamp_time_relative
             * @return Reference to member timestamp_time_relative
             */
            eProsima_user_DllExport int32_t& timestamp_time_relative();

            /*!
             * @brief This function sets a value in member time_utc_usec
             * @param _time_utc_usec New value for member time_utc_usec
             */
            eProsima_user_DllExport void time_utc_usec(uint64_t _time_utc_usec);

            /*!
             * @brief This function returns the value of member time_utc_usec
             * @return Value of member time_utc_usec
             */
            eProsima_user_DllExport uint64_t time_utc_usec() const;

            /*!
             * @brief This function returns a reference to member time_utc_usec
             * @return Reference to member time_utc_usec
             */
            eProsima_user_DllExport uint64_t& time_utc_usec();

            /*!
             * @brief This function sets a value in member satellites_used
             * @param _satellites_used New value for member satellites_used
             */
            eProsima_user_DllExport void satellites_used(uint8_t _satellites_used);

            /*!
             * @brief This function returns the value of member satellites_used
             * @return Value of member satellites_used
             */
            eProsima_user_DllExport uint8_t satellites_used() const;

            /*!
             * @brief This function returns a reference to member satellites_used
             * @return Reference to member satellites_used
             */
            eProsima_user_DllExport uint8_t& satellites_used();

            /*!
             * @brief This function sets a value in member heading
             * @param _heading New value for member heading
             */
            eProsima_user_DllExport void heading(float _heading);

            /*!
             * @brief This function returns the value of member heading
             * @return Value of member heading
             */
            eProsima_user_DllExport float heading() const;

            /*!
             * @brief This function returns a reference to member heading
             * @return Reference to member heading
             */
            eProsima_user_DllExport float& heading();

            /*!
             * @brief This function sets a value in member heading_offset
             * @param _heading_offset New value for member heading_offset
             */
            eProsima_user_DllExport void heading_offset(float _heading_offset);

            /*!
             * @brief This function returns the value of member heading_offset
             * @return Value of member heading_offset
             */
            eProsima_user_DllExport float heading_offset() const;

            /*!
             * @brief This function returns a reference to member heading_offset
             * @return Reference to member heading_offset
             */
            eProsima_user_DllExport float& heading_offset();

            /*!
             * @brief This function sets a value in member heading_accuracy
             * @param _heading_accuracy New value for member heading_accuracy
             */
            eProsima_user_DllExport void heading_accuracy(float _heading_accuracy);

            /*!
             * @brief This function returns the value of member heading_accuracy
             * @return Value of member heading_accuracy
             */
            eProsima_user_DllExport float heading_accuracy() const;

            /*!
             * @brief This function returns a reference to member heading_accuracy
             * @return Reference to member heading_accuracy
             */
            eProsima_user_DllExport float& heading_accuracy();


            /*!
             * @brief This function returns the maximum serialized size of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getMaxCdrSerializedSize(size_t current_alignment = 0);

            /*!
             * @brief This function returns the serialized size of a data depending on the buffer alignment.
             * @param data Data which is calculated its serialized size.
             * @param current_alignment Buffer alignment.
             * @return Serialized size.
             */
            eProsima_user_DllExport static size_t getCdrSerializedSize(const px4_msgs::msg::SensorGps& data, size_t current_alignment = 0);


            /*!
             * @brief This function serializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serialize(eprosima::fastcdr::Cdr &cdr) const;

            /*!
             * @brief This function deserializes an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void deserialize(eprosima::fastcdr::Cdr &cdr);



            /*!
             * @brief This function returns the maximum serialized size of the Key of an object
             * depending on the buffer alignment.
             * @param current_alignment Buffer alignment.
             * @return Maximum serialized size.
             */
            eProsima_user_DllExport static size_t getKeyMaxCdrSerializedSize(size_t current_alignment = 0);

            /*!
             * @brief This function tells you if the Key has been defined for this type
             */
            eProsima_user_DllExport static bool isKeyDefined();

            /*!
             * @brief This function serializes the key members of an object using CDR serialization.
             * @param cdr CDR serialization object.
             */
            eProsima_user_DllExport void serializeKey(eprosima::fastcdr::Cdr &cdr) const;

        private:
            uint64_t m_timestamp;
            uint32_t m_device_id;
            int32_t m_lat;
            int32_t m_lon;
            int32_t m_alt;
            int32_t m_alt_ellipsoid;
            float m_s_variance_m_s;
            float m_c_variance_rad;
            uint8_t m_fix_type;
            float m_eph;
            float m_epv;
            float m_hdop;
            float m_vdop;
            int32_t m_noise_per_ms;
            uint16_t m_automatic_gain_control;
            int32_t m_jamming_indicator;
            uint8_t m_jamming_state;
            float m_vel_m_s;
            float m_vel_n_m_s;
            float m_vel_e_m_s;
            float m_vel_d_m_s;
            float m_cog_rad;
            bool m_vel_ned_valid;
            int32_t m_timestamp_time_relative;
            uint64_t m_time_utc_usec;
            uint8_t m_satellites_used;
            float m_heading;
            float m_heading_offset;
            float m_heading_accuracy;
        };
    }
}

#endif // _PX4_MSGS_MSG_SENSORGPS_H_